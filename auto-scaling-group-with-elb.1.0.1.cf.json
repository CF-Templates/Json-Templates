{  
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"Auto scaling group with an ELB.",
   "Parameters":{  
      "Vpc":{  
         "Type":"String",
         "Description":"ID of the VPC in which to place the instance"
      },
      "SubnetId1":{  
         "Type":"String",
         "Description":"ID of the first subnet in which to place the instance"
      },
      "SubnetId2":{  
         "Type":"String",
         "Description":"ID of the second subnet in which to place the instance"
      },
      "AZ1":{  
         "Type":"String",
         "Description":"Availability zone of subnet #1"
      },
      "AZ2":{  
         "Type":"String",
         "Description":"Availability zone of subnet #2"
      },
      "ImageId":{  
         "Type":"String",
         "Description":"The ID of the image to launch"
      },
      "KeyPairName":{  
         "Description":"Name of an existing EC2 KeyPair to enable SSH access to the instance.",
         "Type":"String",
         "MinLength":"1",
         "MaxLength":"255",
         "AllowedPattern":"[\\x20-\\x7E]*",
         "ConstraintDescription":"can contain only ASCII characters."
      },      
      "InstanceType":{  
         "Description":"EC2 instance type",
         "Type":"String",
         "ConstraintDescription":"must be a valid EC2 instance type"
      },
      "LoadBalancerName":{  
         "Description":"A name for the ELB",
         "Type":"String"
      },
      "HealthCheck":{  
         "Description":"Type of healthcheck the ELB should use",
         "Type":"String",
         "Default":"TCP:80"
      },
      "SNSTopicARN":{  
         "Description":"SNS Topic to send alerts to",
         "Type":"String",
         "Default":"255"
      },
      "SSHSG1":{  
         "Description":"Security Group for incoming ssh",
         "Type":"String",
         "Default":"sg-396c2a5c"
      },
      "SSHSG2":{  
         "Description":"Security Group for incoming ssh",
         "Type":"String",
         "Default":"sg-dcad2bb9"
      },
      "IamInstanceProfile":{  
         "Description":"The physical ID of an instance profile or a reference to an InstanceProfile resource.",
         "Type":"String"
      },
      "SSLCertificateId":{  
         "Description":"ID of the SSL certificate for the ELB",
         "Type":"String"
      },
      "WebServerGroupMinSize":{  
         "Description":"Minimum number of instances for autoscale group",
         "Type":"String",
         "Default":"1"
      },
      "WebServerGroupMaxSize":{  
         "Description":"Maximum number of instances for autoscale group",
         "Type":"String",
         "Default":"1"
      }
   },
   "Resources":{  
      "ElasticLoadBalancer":{  
         "Type":"AWS::ElasticLoadBalancing::LoadBalancer",
         "Properties":{  
            "LoadBalancerName":{  
               "Ref":"LoadBalancerName"
            },
            "CrossZone":"true",
            "Subnets":[  
               {  
                  "Ref":"SubnetId1"
               },
               {  
                  "Ref":"SubnetId2"
               }
            ],
            "SecurityGroups":[  
               {  
                  "Ref":"ApplicationSecurityGroup"
               }
            ],
            "Scheme":"internal",
            "Listeners":[  
               {  
                  "LoadBalancerPort":"80",
                  "InstancePort":"80",
                  "Protocol":"HTTP"
               },
               {  
                  "LoadBalancerPort":"443",
                  "InstancePort":"80",
                  "Protocol":"HTTP"
               }
            ],
            "HealthCheck":{  
               "Target":"TCP:80",
               "HealthyThreshold":"3",
               "UnhealthyThreshold":"5",
               "Interval":"30",
               "Timeout":"5"
            }
         }
      },
      "WebServerGroup":{  
         "Type":"AWS::AutoScaling::AutoScalingGroup",
         "Properties":{  
            "VPCZoneIdentifier":[  
               {  
                  "Ref":"SubnetId1"
               },
               {  
                  "Ref":"SubnetId2"
               }
            ],
            "LoadBalancerNames":[  
               {  
                  "Ref":"ElasticLoadBalancer"
               }
            ],
            "AvailabilityZones":[  
               {  
                  "Ref":"AZ1"
               },
               {  
                  "Ref":"AZ2"
               }
            ],
            "LaunchConfigurationName": {
               "Ref": "LaunchConfig"
            },
            "MinSize":{  
               "Ref":"WebServerGroupMinSize"
            },
            "MaxSize":{  
               "Ref":"WebServerGroupMaxSize"
            }
         },
         "UpdatePolicy":{  
            "AutoScalingRollingUpdate":{  
               "MinInstancesInService":"1",
               "MaxBatchSize":"1",
               "PauseTime":"PT15M",
               "WaitOnResourceSignals":"true"
            }
         }
      },
      "LaunchConfig":{  
         "Type":"AWS::AutoScaling::LaunchConfiguration",
         "Metadata":{  

         },
         "Properties":{  
            "KeyName":{  
               "Ref":"KeyPairName"
            },
            "ImageId":{  
               "Ref":"ImageId"
            },
            "SecurityGroups":[  
               {  
                  "Ref":"ApplicationSecurityGroup"
               }
            ],
            "InstanceType":{  
               "Ref":"InstanceType"
            }
         }
      },
      "WebServerScaleUpPolicy":{  
         "Type":"AWS::AutoScaling::ScalingPolicy",
         "Properties":{  
            "AdjustmentType":"ChangeInCapacity",
            "AutoScalingGroupName":{  
               "Ref":"WebServerGroup"
            },
            "Cooldown":"60",
            "ScalingAdjustment":"1"
         }
      },
      "WebServerScaleDownPolicy":{  
         "Type":"AWS::AutoScaling::ScalingPolicy",
         "Properties":{  
            "AdjustmentType":"ChangeInCapacity",
            "AutoScalingGroupName":{  
               "Ref":"WebServerGroup"
            },
            "Cooldown":"60",
            "ScalingAdjustment":"-1"
         }
      },
      "CPUAlarmHigh":{  
         "Type":"AWS::CloudWatch::Alarm",
         "Properties":{  
            "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",
            "AlarmActions":[  
               {  
                  "Ref":"SNSTopicARN"
               }
            ],
            "InsufficientDataActions":[  
               {  
                  "Ref":"SNSTopicARN"
               }
            ],
            "MetricName": "CPUUtilization",
            "Namespace": "AWS/EC2",
            "Statistic": "Average",
            "Period": "300",
            "EvaluationPeriods": "2",
            "Threshold": "90",
            "AlarmActions":[  
               {  
                  "Ref":"WebServerScaleDownPolicy"
               }
            ],
            "Dimensions":[  
               {  
                  "Name":"AutoScalingGroupName",
                  "Value":{  
                     "Ref":"WebServerGroup"
                  }
               }
            ],            
            "ComparisonOperator": "GreaterThanThreshold"
         }
      },
      "CPUAlarmLow":{  
         "Type":"AWS::CloudWatch::Alarm",
         "Properties":{  
            "AlarmDescription":"Scale-down if CPU < 70% for 10 minutes",
            "AlarmActions":[  
               {  
                  "Ref":"SNSTopicARN"
               }
            ],
            "InsufficientDataActions":[  
               {  
                  "Ref":"SNSTopicARN"
               }
            ],
            "MetricName":"CPUUtilization",
            "Namespace":"AWS/EC2",
            "Statistic":"Average",
            "Period":"300",
            "EvaluationPeriods":"2",
            "Threshold":"70",
            "AlarmActions":[  
               {  
                  "Ref":"WebServerScaleDownPolicy"
               }
            ],
            "Dimensions":[  
               {  
                  "Name":"AutoScalingGroupName",
                  "Value":{  
                     "Ref":"WebServerGroup"
                  }
               }
            ],
            "ComparisonOperator":"LessThanThreshold"
         }
      },
      "TooManyUnhealthyHostsAlarm":{  
         "Type":"AWS::CloudWatch::Alarm",
         "Properties":{  
            "AlarmDescription":"Alarm if there are any unhealthy hosts.",
            "Namespace":"AWS/ELB",
            "MetricName":"UnHealthyHostCount",
            "Statistic":"Average",
            "Dimensions":[  
               {  
                  "Name":"LoadBalancerName",
                  "Value":{  
                     "Ref":"ElasticLoadBalancer"
                  }
               }
            ],
            "Period":"300",
            "EvaluationPeriods":"1",
            "Threshold":"0",
            "ComparisonOperator":"GreaterThanThreshold",
            "AlarmActions":[  
               {  
                  "Ref":"SNSTopicARN"
               }
            ]
         }
      },
      "RequestLatencyAlarmHigh":{  
         "Type":"AWS::CloudWatch::Alarm",
         "Properties":{  
            "AlarmDescription":"Alarm if request latency > ",
            "Namespace":"AWS/ELB",
            "MetricName":"Latency",
            "Dimensions":[  
               {  
                  "Name":"LoadBalancerName",
                  "Value":{  
                     "Ref":"ElasticLoadBalancer"
                  }
               }
            ],
            "Statistic":"Average",
            "Period":"300",
            "EvaluationPeriods":"1",
            "Threshold":"1",
            "ComparisonOperator":"GreaterThanThreshold",
            "AlarmActions":[  
               {  
                  "Ref":"SNSTopicARN"
               }
            ]
         }
      },
      "ApplicationSecurityGroup":{  
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{  
            "GroupDescription":"Enable HTTP access on the configured port",
            "VpcId":{  
               "Ref":"Vpc"
            },
            "SecurityGroupIngress":[  
               {  
                  "IpProtocol":"tcp",
                  "FromPort":"80",
                  "ToPort":"80",
                  "CidrIp":"3.0.0.0/8"
               },
               {  
                  "IpProtocol":"tcp",
                  "FromPort":"443",
                  "ToPort":"443",
                  "CidrIp":"3.0.0.0/8"
               },
               {  
                  "IpProtocol":"tcp",
                  "FromPort":"80",
                  "ToPort":"80",
                  "CidrIp":"10.0.0.0/8"
               },
               {  
                  "IpProtocol":"tcp",
                  "FromPort":"443",
                  "ToPort":"443",
                  "CidrIp":"10.0.0.0/8"
               },
               {  
                  "IpProtocol":"tcp",
                  "FromPort":"22",
                  "ToPort":"22",
                  "SourceSecurityGroupId":{  
                     "Ref":"SSHSG1"
                  }
               },
               {  
                  "IpProtocol":"tcp",
                  "FromPort":"22",
                  "ToPort":"22",
                  "SourceSecurityGroupId":{  
                     "Ref":"SSHSG2"
                  }
               }
            ]
         }
      },
      "ApplicationSecurityGroupIngress":{  
         "Type":"AWS::EC2::SecurityGroupIngress",
         "Properties":{  
            "GroupId":{  
               "Ref":"ApplicationSecurityGroup"
            },
            "IpProtocol":"tcp",
            "FromPort":"80",
            "ToPort":"80",
            "SourceSecurityGroupId":{  
               "Ref":"ApplicationSecurityGroup"
            }
         }
      },
      "ApplicationSecurityGroupIngress2":{  
         "Type":"AWS::EC2::SecurityGroupIngress",
         "Properties":{  
            "GroupId":{  
               "Ref":"ApplicationSecurityGroup"
            },
            "IpProtocol":"tcp",
            "FromPort":"443",
            "ToPort":"443",
            "SourceSecurityGroupId":{  
               "Ref":"ApplicationSecurityGroup"
            }
         }
      }
   },
   "Outputs":{  
      "ApplicationStackSecurityGroup":{  
         "Value":{  
            "Fn::GetAtt":[  
               "ApplicationSecurityGroup",
               "GroupId"
            ]
         },
         "Description":"Security group for this application stack"
      },
      "ELBDNSName":{  
         "Value":{  
            "Fn::GetAtt":[  
               "ElasticLoadBalancer",
               "DNSName"
            ]
         },
         "Description":"DNS name for the ELB"
      }
   }
}
{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Template for EC2 with Static IP and creating NFS server. Uses Load Balancer for Monitoring via HealthCheck along with other alerts",
    "Parameters": {
        "Vpc": {
            "Type": "String",
            "Description": "ID of the VPC in which to place the instance"
        },
        "SubnetId": {
            "Type": "String",
            "Description": "ID of the subnet in which to place the instance"
        },
        "AZ" : {
            "Description" : "What availability zone should this stack be launched in? us-east-1a, us-east-1b, etc.",
            "Type"        : "String",
            "Default"     : "us-east-1b",
            "ConstraintDescription" : "must be a valid EC2 Availability Zone"
        },
        "ImageId": {
            "Type": "String",
            "Description": "The ID of the image to launch",
            "Default": "ami-0826b61e"
        },
        "KeyPairName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "can contain only ASCII characters."
        },
        "PrimaryIPAddress": {
            "Type": "String",
            "Description": "Primary private IP. This must be a valid IP address for the subnet"
        },
        "InstanceType": {
            "Description": "EC2 instance type",
            "Type": "String",
            "ConstraintDescription": "must be a valid EC2 instance type"
        },
        "Volume2Size": {
            "Description": "Size of volume to attached to instance",
            "Type": "String",
            "Default": "0"
        },
        "Volume2Type": {
            "Description": "Type of volume to attach to instance",
            "Type": "String",
            "Default": "gp2"
        },
        "Volume2Encrypted": {
            "Description": "Indicates whether the volume is encrypted",
            "Type": "String",
            "Default": "true"
        },
        "Volume3Size": {
            "Description": "Size of volume to attached to instance",
            "Type": "String",
            "Default": "0"
        },
        "Volume3Type": {
            "Description": "Type of volume to attach to instance",
            "Type": "String",
            "Default": "gp2"
        },
        "Volume3Encrypted": {
            "Description": "Indicates whether the volume is encrypted",
            "Type": "String",
            "Default": "true"
        },
        "Volume4Size": {
            "Description": "Size of volume to attached to instance",
            "Type": "String",
            "Default": "0"
        },
        "Volume4Type": {
            "Description": "Type of volume to attach to instance",
            "Type": "String",
            "Default": "gp2"
        },
        "Volume4Encrypted": {
            "Description": "Indicates whether the volume is encrypted",
            "Type": "String",
            "Default": "true"
        },
        "SSHSG1": {
            "Description": "Security Group for incoming ssh",
            "Type": "String",
            "Default": "sg-?"
        },
        "SSHSG2": {
            "Description": "Security Group for incoming ssh",
            "Type": "String",
            "Default": "sg-?"
        },
        "IamInstanceProfile": {
            "Description": "The physical ID of an instance profile or a reference to an InstanceProfile resource.",
            "Type": "String"
        }
    },
    "Mappings": {},
    "Conditions": {
        "CreateVolume2": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "Volume2Size"
                        },
                        "0"
                    ]
                }
            ]
        },
    "CreateVolume3": {
        "Fn::Not": [
            {
                "Fn::Equals": [
                    {
                        "Ref": "Volume3Size"
                    },
                    "0"
                ]
            }
        ]
    },
    "CreateVolume4": {
        "Fn::Not": [
            {
                "Fn::Equals": [
                    {
                        "Ref": "Volume4Size"
                    },
                    "0"
                ]
            }
        ]
    }
  },
    "Resources": {
        "ApplicationInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "ImageId"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "IamInstanceProfile": {
                    "Ref": "IamInstanceProfile"
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "Eth0"
                        },
                        "DeviceIndex": "0"
                    }
                ]
            }
        },
        "Volume2": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateVolume2",
            "Properties": {
                "Size": {
                    "Ref": "Volume2Size"
                },
                "AvailabilityZone": {
                    "Ref": "AZ"
                },
                "Encrypted": {
                    "Ref": "Volume2Encrypted"
                },
                "VolumeType": {
                    "Ref": "Volume2Type"
                }
            }
        },
        "MountPoint2": {
            "Type": "AWS::EC2::VolumeAttachment",
            "Condition": "CreateVolume2",
            "Properties": {
                "InstanceId": {
                    "Ref": "ApplicationInstance"
                },
                "VolumeId": {
                    "Ref": "Volume2"
                },
                "Device": "/dev/xvdf"
            }
        },
        "Volume3": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateVolume3",
            "Properties": {
                "Size": {
                    "Ref": "Volume3Size"
                },
                "AvailabilityZone": {
                    "Ref": "AZ"
                },
                "Encrypted": {
                    "Ref": "Volume3Encrypted"
                },
                "VolumeType": {
                    "Ref": "Volume3Type"
                }
            }
        },
        "MountPoint3": {
            "Type": "AWS::EC2::VolumeAttachment",
            "Condition": "CreateVolume3",
            "Properties": {
                "InstanceId": {
                    "Ref": "ApplicationInstance"
                },
                "VolumeId": {
                    "Ref": "Volume3"
                },
                "Device": "/dev/xvdg"
            }
        },
        "Volume4": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateVolume4",
            "Properties": {
                "Size": {
                    "Ref": "Volume4Size"
                },
                "AvailabilityZone": {
                    "Ref": "AZ"
                },
                "Encrypted": {
                    "Ref": "Volume4Encrypted"
                },
                "VolumeType": {
                    "Ref": "Volume4Type"
                }
            }
        },
        "MountPoint4": {
            "Type": "AWS::EC2::VolumeAttachment",
            "Condition": "CreateVolume4",
            "Properties": {
                "InstanceId": {
                    "Ref": "ApplicationInstance"
                },
                "VolumeId": {
                    "Ref": "Volume4"
                },
                "Device": "/dev/xvdh"
            }
        },
        "Eth0": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetId"
                },
                "PrivateIpAddress": {
                    "Ref": "PrimaryIPAddress"
                },
                "GroupSet": [
                    {
                        "Ref": "ApplicationSecurityGroup"
                    }
                ]
            }
        },
        "ApplicationSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable access on the configured port",
                "VpcId": {
                    "Ref": "Vpc"
                },
                "SecurityGroupIngress": [
                  {
                      "IpProtocol" : "tcp",
                      "FromPort"   : "111",
                      "ToPort"     : "111",
                      "CidrIp"     : "subnet-ip/24"
                  },
                  {
                      "IpProtocol" : "udp",
                      "FromPort"   : "111",
                      "ToPort"     : "111",
                      "CidrIp"     : "subnet-ip/24"
                  },
                  {
                      "IpProtocol" : "tcp",
                      "FromPort"   : "111",
                      "ToPort"     : "111",
                      "CidrIp"     : "subnet-ip/24"
                  },
                  {
                      "IpProtocol" : "udp",
                      "FromPort"   : "111",
                      "ToPort"     : "111",
                      "CidrIp"     : "subnet-ip/24"
                  },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "SourceSecurityGroupId": {
                            "Ref": "SSHSG1"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "SourceSecurityGroupId": {
                            "Ref": "SSHSG2"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "892",
                        "ToPort"     : "892",
                        "CidrIp"     : "subnet-ip/24"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "892",
                        "ToPort"     : "892",
                        "CidrIp"     : "subnet-ip/24"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "892",
                        "ToPort"     : "892",
                        "CidrIp"     : "subnet-ip/24"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "892",
                        "ToPort"     : "892",
                        "CidrIp"     : "subnet-ip/24"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "2049",
                        "ToPort"     : "2049",
                        "CidrIp"     : "subnet-ip/24"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "2049",
                        "ToPort"     : "2049",
                        "CidrIp"     : "subnet-ip/24"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "2049",
                        "ToPort"     : "2049",
                        "CidrIp"     : "subnet-ip/24"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "2049",
                        "ToPort"     : "2049",
                        "CidrIp"     : "subnet-ip/24"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "32803",
                        "ToPort"     : "32803",
                        "CidrIp"     : "subnet-ip/24"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "32803",
                        "ToPort"     : "32803",
                        "CidrIp"     : "subnet-ip/24"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "32769",
                        "ToPort"     : "32769",
                        "CidrIp"     : "subnet-ip/24"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "32769",
                        "ToPort"     : "32769",
                        "CidrIp"     : "subnet-ip/24"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "InstanceId": {
            "Value": {
                "Ref": "ApplicationInstance"
            },
            "Description": "Instance Id of newly created instance"
        },
        "PrimaryPrivateIPAddress": {
            "Value": {
                "Fn::GetAtt": [
                    "Eth0",
                    "PrimaryPrivateIpAddress"
                ]
            },
            "Description": "Primary private IP address of Eth0"
        },
        "ApplicationStackSecurityGroup": {
            "Value": {
                "Fn::GetAtt": [
                    "ApplicationSecurityGroup",
                    "GroupId"
                ]
            },
            "Description": "Security group for this application stack"
        }
    }
}

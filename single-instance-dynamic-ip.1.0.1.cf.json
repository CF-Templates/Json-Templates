{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Single EC2 Instance with dynamic IP - Infrastructure",
  "Parameters": {
    "Vpc": {
      "Type" : "AWS::EC2::VPC::Id",
      "Description": "ID of the VPC in which to place the instance",
      "Default": "vpc-id?"
    },
    "Az": {
      "Type": "AWS::EC2::AvailabilityZone::Name",
      "Description": "Availability Zone where the Instance will be placed"
    },
    "SubnetId": {
      "Type": "String",
      "Description": "ID of the subnet in which to place the instance"
    },
    "ImageId": {
      "Type": "String",
      "Description": "The ID of the image to launch",
      "Default": "ami-id?"
    },
    "KeyPairName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "InstanceType": {
      "Description": "EC2 instance type",
      "Type": "String"
    },
    "Volume2Size": {
      "Description": "Size of volume to attached to instance",
      "Type": "String",
      "Default": "0"
    },
    "Volume2Encrypted": {
      "Description": "Indicates whether the volume is encrypted",
      "Type": "String",
      "AllowedValues": ["true", "false"],
      "Default": "false"
    },
    "Volume3Size": {
      "Description": "Size of volume to attached to instance",
      "Type": "String",
      "Default": "0"
    },
    "Volume3Encrypted": {
      "Description": "Indicates whether the volume is encrypted",
      "Type": "String",
      "AllowedValues": ["true", "false"],
      "Default": "false"
    },
    "Volume4Size": {
      "Description": "Size of volume to attached to instance",
      "Type": "String",
      "Default": "0"
    },
    "Volume4Encrypted": {
      "Description": "Indicates whether the volume is encrypted",
      "Type": "String",
      "AllowedValues": ["true", "false"],
      "Default": "false"
    },
    "WebServerPort": {
      "Description": "TCP/IP port of the web server port 80",
      "Type": "String",
      "Default": "80"
    },
    "WebServerPort443": {
      "Description": "TCP/IP port of the web server port 443",
      "Type": "String",
      "Default": "443"
    },
    "SSHSG1": {
      "Description": "Security Group for incoming ssh",
      "Type": "String",
      "Default": "sg-?"
    },
    "SSHSG2": {
      "Description": "Security Group for incoming ssh",
      "Type": "String",
      "Default": "sg-?"
    },
    "IamInstanceProfile": {
      "Description": "The physical ID of an instance profile or a reference to an InstanceProfile resource.",
      "Type": "String"
    },
    "TagApp": {
      "Description": "The name of the application for the Tag app.",
      "Type": "String"
    },
    "TagOwner": {
      "Description": "The SSO of the application owner for the Tag owner.",
      "Type": "String"
    },
    "TagUai": {
      "Description": "The UAI value for the Tag uai.",
      "Type": "String",
      "Default": "TBD"
    },
    "TagEnv": {
      "Description": "The environment for the Tag env.",
      "AllowedValues": ["dev", "stage", "uat", "prd"],
      "Default": "prd",
      "Type": "String"
    },
    "TagRole": {
      "Description": "The role for the Tag role (such as web-server).",
      "Type": "String"
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "VPC/Network Details" },
          "Parameters" : [ "Vpc", "Az", "SubnetId" ]
        },
        {
          "Label" : { "default" : "Instance Details" },
          "Parameters" : [ "ImageId", "KeyPairName", "InstanceType", "IamInstanceProfile", "Volume2Size", "Volume2Encrypted", "Volume3Size", "Volume3Encrypted", "Volume4Size", "Volume4Encrypted"]
        },
        {
          "Label" : { "default" : "Instance Tag Values" },
          "Parameters" : [ "TagOwner", "TagEnv", "TagApp", "TagUai", "TagRole"]
        },
        {
          "Label" : { "default" : "Web Server Ports (Shouldn't be changed from the default values)" },
          "Parameters" : [ "WebServerPort", "WebServerPort443" ]
        },
        {
          "Label" : { "default" : "Security Groups (Shouldn't be changed from the default values)" },
          "Parameters" : [ "WebServerPort", "WebServerPort443" ]
        }
      ]
    }
  },
  "Conditions": {
    "CreateVolume2": {
      "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Volume2Size" }, "0" ] } ]
    },
    "CreateVolume3": {
      "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Volume3Size" }, "0" ] } ]
    },
    "CreateVolume4": {
      "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Volume4Size" }, "0" ] } ]
    }
  },
  "Resources": {
    "ApplicationInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": { "Ref": "ImageId" },
        "AvailabilityZone": { "Ref": "Az" },
        "SubnetId": { "Ref": "SubnetId" },
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyPairName" },
        "IamInstanceProfile": { "Ref": "IamInstanceProfile" },
        "SecurityGroupIds": [ { "Ref": "ApplicationSecurityGroup"} ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "owner", "Value" : { "Ref" : "TagOwner"} },
          { "Key" : "app", "Value" : { "Ref" : "TagApp"} },
          { "Key" : "env", "Value" : { "Ref" : "TagEnv"} },
          { "Key" : "UAI", "Value" : { "Ref" : "TagUai"} },
          { "Key" : "role", "Value" : { "Ref" : "TagRole"} }
        ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : [ "", [
          "#!/bin/bash -xe\n",
          "/usr/bin/chef-solo -r https://s3.amazonaws.com/grc-library/gr-splunk/ge-chef-splunk.tar.gz -o 'recipe[ge-chef-splunk::default]'\n",
          "/usr/bin/chef-solo -r https://s3.amazonaws.com/grc-library/grc-qualys/grc-qualys.tar.gz -o 'recipe[grc-qualys::default]'\n",
          "/usr/bin/chef-solo -r https://s3.amazonaws.com/grc-library/gr-base/gr-base-cookbook-63.tar.gz -o 'recipe[gr-base::users]'\n"
        ] ] } }
      }
    },
    "Volume2": {
      "Type": "AWS::EC2::Volume",
      "Condition": "CreateVolume2",
      "Properties": {
        "Size": { "Ref": "Volume2Size" },
        "AvailabilityZone": { "Ref": "Az" },
        "Encrypted": { "Ref": "Volume2Encrypted" },
        "VolumeType": "gp2",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Ref" : "AWS::StackName" } }
        ]
      }
    },
    "MountPoint2": {
      "Type": "AWS::EC2::VolumeAttachment",
      "Condition": "CreateVolume2",
      "Properties": {
        "InstanceId": { "Ref": "ApplicationInstance" },
        "VolumeId": { "Ref": "Volume2" },
        "Device": "/dev/xvdf"
      }
    },
    "Volume3": {
      "Type": "AWS::EC2::Volume",
      "Condition": "CreateVolume3",
      "Properties": {
        "Size": { "Ref": "Volume3Size" },
        "AvailabilityZone": { "Ref": "Az" },
        "Encrypted": { "Ref": "Volume3Encrypted" },
        "VolumeType": "gp2",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Ref" : "AWS::StackName" } }
        ]
      }
    },
    "MountPoint3": {
      "Type": "AWS::EC2::VolumeAttachment",
      "Condition": "CreateVolume3",
      "Properties": {
        "InstanceId": { "Ref": "ApplicationInstance" },
        "VolumeId": { "Ref": "Volume3" },
        "Device": "/dev/xvdg"
      }
    },
    "Volume4": {
      "Type": "AWS::EC2::Volume",
      "Condition": "CreateVolume4",
      "Properties": {
        "Size": { "Ref": "Volume4Size" },
        "AvailabilityZone": { "Ref": "Az" },
        "Encrypted": { "Ref": "Volume4Encrypted" },
        "VolumeType": "gp2",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Ref" : "AWS::StackName" } }
        ]
      }
    },
    "MountPoint4": {
      "Type": "AWS::EC2::VolumeAttachment",
      "Condition": "CreateVolume4",
      "Properties": {
        "InstanceId": { "Ref": "ApplicationInstance" },
        "VolumeId": { "Ref": "Volume4" },
        "Device": "/dev/xvdh"
      }
    },
    "ApplicationSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTP access on the configured port",
        "VpcId": {
          "Ref": "Vpc"
        },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Ref" : "AWS::StackName" } }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": { "Ref": "WebServerPort" },
            "ToPort": { "Ref": "WebServerPort" },
            "CidrIp": "3.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": { "Ref": "WebServerPort" },
            "ToPort": { "Ref": "WebServerPort" },
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": { "Ref": "WebServerPort443" },
            "ToPort": { "Ref": "WebServerPort443" },
            "CidrIp": "3.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": { "Ref": "WebServerPort443" },
            "ToPort": { "Ref": "WebServerPort443" },
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "SourceSecurityGroupId": { "Ref": "SSHSG1" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "SourceSecurityGroupId": { "Ref": "SSHSG2" }
          }
        ]
      }
    }
  },
  "Outputs": {
    "InstanceId": {
      "Value": { "Ref": "ApplicationInstance" },
      "Description": "Instance Id of newly created instance"
    },
    "PrimaryPrivateIPAddress": {
      "Value": { "Fn::GetAtt": [ "ApplicationInstance", "PrivateIp" ] },
      "Description": "Primary private IP address of Eth0"
    },
    "ApplicationStackSecurityGroup": {
      "Value": { "Fn::GetAtt": [ "ApplicationSecurityGroup", "GroupId" ] },
      "Description": "Security group for this application stack"
    }
  }
}
